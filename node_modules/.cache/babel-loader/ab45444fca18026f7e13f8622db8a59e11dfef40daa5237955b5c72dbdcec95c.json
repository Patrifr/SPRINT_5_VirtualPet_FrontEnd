{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\JAVA_ITACADEMY\\\\SPRINT_5_VirtualPet\\\\Front\\\\src\\\\components\\\\Pet\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserPets } from '../../services/api'; // Asegúrate de que esta función esté definida correctamente\nimport '../../styles/UserDashboard.css'; // Verifica la ruta del archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  // Definir las variables de estado correctamente\n  const [pets, setPets] = useState([]);\n  const [error, setError] = useState('');\n\n  // Función para obtener las mascotas del usuario\n  const fetchUserPets = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Obtén el token almacenado\n      const userId = localStorage.getItem('userId'); // Obtén el userId\n      const response = await getUserPets(userId, token); // Pasa el token y userId\n\n      setPets(response.data); // Suponiendo que setPets es un hook para almacenar las mascotas\n    } catch (error) {\n      console.error('Failed to load pets:', error);\n      setError('Failed to load pets.');\n    }\n  };\n  useEffect(() => {\n    fetchUserPets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My WhimsyPets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: pets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pets found. Please create a pet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : pets.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pet.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, pet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-pet-btn\",\n      children: \"Create New Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"sxrVFlRv5V2NUe2iU1gXMgXwKwM=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getUserPets","jsxDEV","_jsxDEV","UserDashboard","_s","pets","setPets","error","setError","fetchUserPets","token","localStorage","getItem","userId","response","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pet","name","type","id","_c","$RefreshReg$"],"sources":["C:/Users/patri/Desktop/JAVA_ITACADEMY/SPRINT_5_VirtualPet/Front/src/components/Pet/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getUserPets } from '../../services/api'; // Asegúrate de que esta función esté definida correctamente\r\nimport '../../styles/UserDashboard.css'; // Verifica la ruta del archivo CSS\r\n\r\nconst UserDashboard = () => {\r\n  // Definir las variables de estado correctamente\r\n  const [pets, setPets] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  // Función para obtener las mascotas del usuario\r\n  const fetchUserPets = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Obtén el token almacenado\r\n      const userId = localStorage.getItem('userId'); // Obtén el userId\r\n      const response = await getUserPets(userId, token);  // Pasa el token y userId\r\n  \r\n      setPets(response.data);  // Suponiendo que setPets es un hook para almacenar las mascotas\r\n    } catch (error) {\r\n      console.error('Failed to load pets:', error);\r\n      setError('Failed to load pets.');\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchUserPets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"user-dashboard\">\r\n      <h2>My WhimsyPets</h2>\r\n      {error && <div>{error}</div>} {/* Muestra el mensaje de error si ocurre */}\r\n      <div className=\"pet-list\">\r\n        {pets.length === 0 ? (\r\n          <p>No pets found. Please create a pet.</p>\r\n        ) : (\r\n          pets.map((pet) => (\r\n            <div key={pet.id} className=\"pet-card\">\r\n              <h3>{pet.name}</h3>\r\n              <p>{pet.type}</p>\r\n              {/* Agrega más detalles de la mascota si es necesario */}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <button className=\"create-pet-btn\">Create New Pet</button> {/* Botón para crear nuevas mascotas */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;AAClD,OAAO,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,MAAME,QAAQ,GAAG,MAAMd,WAAW,CAACa,MAAM,EAAEH,KAAK,CAAC,CAAC,CAAE;;MAEpDJ,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,sBAAsB,CAAC;IAClC;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBf,KAAK,iBAAIL,OAAA;MAAAgB,QAAA,EAAMX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAC,GAAC,eAC9BpB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBb,IAAI,CAACkB,MAAM,KAAK,CAAC,gBAChBrB,OAAA;QAAAgB,QAAA,EAAG;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE1CjB,IAAI,CAACmB,GAAG,CAAEC,GAAG,iBACXvB,OAAA;QAAkBe,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACpChB,OAAA;UAAAgB,QAAA,EAAKO,GAAG,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBpB,OAAA;UAAAgB,QAAA,EAAIO,GAAG,CAACE;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFTG,GAAG,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNpB,OAAA;MAAQe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3CID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}