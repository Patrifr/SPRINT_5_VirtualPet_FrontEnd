{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\nexport const api = axios.create({\n  baseURL: API_URL\n});\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\nconst getUserIdFromStorage = () => {\n  return localStorage.getItem('userId');\n};\nexport const signup = data => api.post('/v1/auth/signup', data);\nexport const signin = data => api.post('/v1/auth/signin', data);\nexport const createPet = (petData, token) => {\n  return axios.post(`${API_URL}/pet/new`, petData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getUserPets = (userId, token) => {\n  return api.get(`/pet/getUserPets?userId=${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getAll = token => api.get('/pet/getAll', {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const updatePet = (petId, petInteraction, token) => {\n  const userId = getUserIdFromStorage(); // Obtenemos el userId directamente\n  if (!token || !userId) {\n    console.error(\"User not authenticated or token missing.\");\n    return Promise.reject(\"Authentication required\");\n  }\n  const data = {\n    id: petId,\n    petInteraction,\n    userId\n  }; // Incluimos el userId en el body\n\n  return axios.put(`/api/pet/update/${petId}`, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\n\n// Función para obtener los detalles de la mascota\nexport const getPetDetails = (userId, petId, token) => {\n  return api.get('/pet/get', {\n    params: {\n      userId,\n      petId\n    },\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","getToken","localStorage","getItem","getUserIdFromStorage","signup","data","post","signin","createPet","petData","token","headers","Authorization","getUserPets","userId","get","getAll","updatePet","petId","petInteraction","console","error","Promise","reject","id","put","getPetDetails","params"],"sources":["C:/Users/patri/Desktop/JAVA_ITACADEMY/SPRINT_5_VirtualPet/Front/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\nexport const api = axios.create({\n  baseURL: API_URL,\n});\n\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\nconst getUserIdFromStorage = () => {\n  return localStorage.getItem('userId'); \n};\n\n\nexport const signup = (data) => api.post('/v1/auth/signup', data);\nexport const signin = (data) => api.post('/v1/auth/signin', data);\n\nexport const createPet = (petData, token) => {\n  return axios.post(`${API_URL}/pet/new`, petData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n  export const getUserPets = (userId, token) => {\n    return api.get(`/pet/getUserPets?userId=${userId}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  };\n\n  export const getAll = (token) => \n    api.get('/pet/getAll', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    export const updatePet = (petId, petInteraction, token) => {\n      const userId = getUserIdFromStorage(); // Obtenemos el userId directamente\n      if (!token || !userId) {\n        console.error(\"User not authenticated or token missing.\");\n        return Promise.reject(\"Authentication required\");\n      }\n    \n      const data = { id: petId, petInteraction, userId }; // Incluimos el userId en el body\n    \n      return axios.put(`/api/pet/update/${petId}`, data, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    };\n    \n    // Función para obtener los detalles de la mascota\n    export const getPetDetails = (userId, petId, token) => {\n      return api.get('/pet/get', {\n        params: { userId, petId },\n        headers: { Authorization: `Bearer ${token}` },\n      });\n    };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACjC,OAAOF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;AACvC,CAAC;AAGD,OAAO,MAAME,MAAM,GAAIC,IAAI,IAAKR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;AACjE,OAAO,MAAME,MAAM,GAAIF,IAAI,IAAKR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;AAEjE,OAAO,MAAMG,SAAS,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;EAC3C,OAAOf,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,UAAU,EAAEa,OAAO,EAAE;IAC/CE,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAEC,OAAO,MAAMG,WAAW,GAAGA,CAACC,MAAM,EAAEJ,KAAK,KAAK;EAC5C,OAAOb,GAAG,CAACkB,GAAG,CAAC,2BAA2BD,MAAM,EAAE,EAAE;IAClDH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,MAAM,GAAIN,KAAK,IAC1Bb,GAAG,CAACkB,GAAG,CAAC,aAAa,EAAE;EACrBJ,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUF,KAAK;EAChC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAGA,CAACC,KAAK,EAAEC,cAAc,EAAET,KAAK,KAAK;EACzD,MAAMI,MAAM,GAAGX,oBAAoB,CAAC,CAAC,CAAC,CAAC;EACvC,IAAI,CAACO,KAAK,IAAI,CAACI,MAAM,EAAE;IACrBM,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;IACzD,OAAOC,OAAO,CAACC,MAAM,CAAC,yBAAyB,CAAC;EAClD;EAEA,MAAMlB,IAAI,GAAG;IAAEmB,EAAE,EAAEN,KAAK;IAAEC,cAAc;IAAEL;EAAO,CAAC,CAAC,CAAC;;EAEpD,OAAOnB,KAAK,CAAC8B,GAAG,CAAC,mBAAmBP,KAAK,EAAE,EAAEb,IAAI,EAAE;IACjDM,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMgB,aAAa,GAAGA,CAACZ,MAAM,EAAEI,KAAK,EAAER,KAAK,KAAK;EACrD,OAAOb,GAAG,CAACkB,GAAG,CAAC,UAAU,EAAE;IACzBY,MAAM,EAAE;MAAEb,MAAM;MAAEI;IAAM,CAAC;IACzBP,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}