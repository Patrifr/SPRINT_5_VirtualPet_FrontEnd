{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\JAVA_ITACADEMY\\\\SPRINT_5_VirtualPet\\\\Front\\\\src\\\\components\\\\Pet\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserPets } from '../../services/api'; // Importamos el servicio para obtener mascotas\nimport '../../styles/UserDashboard.css'; // Asegúrate de tener el archivo CSS adecuado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId');\n  console.log('Pets:', response.data);\n  const fetchUserPets = async () => {\n    try {\n      if (!userId) {\n        setError('User not logged in.');\n        return;\n      }\n\n      // Asegúrate de que 'getUserPets' esté correctamente importado desde api.js\n      const response = await getUserPets(userId); // Esta es la llamada correcta a la API\n      console.log(\"Fetched pets:\", response); // Verifica que 'response' tiene los datos\n      setPets(response.data); // Asume que la respuesta tiene un campo 'data' que contiene las mascotas\n    } catch (err) {\n      console.error('Error fetching pets:', err);\n      setError('Failed to load pets.');\n    }\n  };\n  useEffect(() => {\n    fetchUserPets();\n  }, []); // Se ejecuta solo una vez cuando el componente se monta\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My WhimsyPets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: pets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pets found. Please create a pet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : pets.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pet.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, pet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-pet-btn\",\n      children: \"Create New Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"jOkCMYkOz2Q5P0Ot2LuKsql4T2M=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUserPets","jsxDEV","_jsxDEV","UserDashboard","_s","pets","setPets","navigate","userId","localStorage","getItem","console","log","response","data","fetchUserPets","setError","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pet","name","type","id","_c","$RefreshReg$"],"sources":["C:/Users/patri/Desktop/JAVA_ITACADEMY/SPRINT_5_VirtualPet/Front/src/components/Pet/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUserPets } from '../../services/api';  // Importamos el servicio para obtener mascotas\r\nimport '../../styles/UserDashboard.css';  // Asegúrate de tener el archivo CSS adecuado\r\n\r\nconst UserDashboard = () => {\r\n  const [pets, setPets] = useState([]);\r\n  const navigate = useNavigate();\r\n  const userId = localStorage.getItem('userId');   \r\n\r\n  console.log('Pets:', response.data);\r\n  const fetchUserPets = async () => {\r\n    try {\r\n      if (!userId) {\r\n        setError('User not logged in.');\r\n        return;\r\n      }\r\n\r\n      // Asegúrate de que 'getUserPets' esté correctamente importado desde api.js\r\n      const response = await getUserPets(userId); // Esta es la llamada correcta a la API\r\n      console.log(\"Fetched pets:\", response); // Verifica que 'response' tiene los datos\r\n      setPets(response.data); // Asume que la respuesta tiene un campo 'data' que contiene las mascotas\r\n    } catch (err) {\r\n      console.error('Error fetching pets:', err);\r\n      setError('Failed to load pets.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserPets();\r\n  }, []); // Se ejecuta solo una vez cuando el componente se monta\r\n\r\n  return (\r\n    <div className=\"user-dashboard\">\r\n      <h2>My WhimsyPets</h2>\r\n      {error && <div>{error}</div>} {/* Muestra el mensaje de error si ocurre */}\r\n      <div className=\"pet-list\">\r\n        {pets.length === 0 ? (\r\n          <p>No pets found. Please create a pet.</p>\r\n        ) : (\r\n          pets.map((pet) => (\r\n            <div key={pet.id} className=\"pet-card\">\r\n              <h3>{pet.name}</h3>\r\n              <p>{pet.type}</p>\r\n              {/* Agrega más detalles de la mascota si es necesario */}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <button className=\"create-pet-btn\">Create New Pet</button> {/* Botón para crear nuevas mascotas */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}