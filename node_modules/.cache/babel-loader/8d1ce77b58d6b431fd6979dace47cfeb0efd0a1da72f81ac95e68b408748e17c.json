{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\JAVA_ITACADEMY\\\\SPRINT_5_VirtualPet\\\\Front\\\\src\\\\components\\\\Pet\\\\PetDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPetDetails } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetDashboard = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const userId = params.get('userId');\n  const petId = params.get('petId');\n  const [pet, setPet] = useState(null);\n  useEffect(() => {\n    const fetchPetDetails = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Obtener el token para autenticar la petición\n        const response = await getPetDetails(userId, petId, token); // Llamada a la API con userId y petId\n        console.log(response.data); // Verifica qué contiene la respuesta\n        setPet(response.data); // Guardamos los datos de la mascota en el estado\n      } catch (err) {\n        console.error('Error fetching pet details:', err);\n      }\n    };\n    fetchPetDetails();\n  }, [petId, userId]); // Dependencias para recargar los detalles de la mascota\n\n  if (!pet) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pet-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pet.petName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(`../../assets/pets/${pet.petType}_${pet.petColor}.png`),\n      alt: pet.petName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Type: \", pet.petType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Color: \", pet.petColor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Happiness: \", pet.happiness]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hunger: \", pet.hunger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PetDashboard, \"LogG4mngrVLHJRBVuXX4/Azc4IQ=\", false, function () {\n  return [useLocation];\n});\n_c = PetDashboard;\nexport default PetDashboard;\nvar _c;\n$RefreshReg$(_c, \"PetDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","getPetDetails","jsxDEV","_jsxDEV","PetDashboard","_s","location","params","URLSearchParams","search","userId","get","petId","pet","setPet","fetchPetDetails","token","localStorage","getItem","response","console","log","data","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","petName","src","require","petType","petColor","alt","happiness","hunger","_c","$RefreshReg$"],"sources":["C:/Users/patri/Desktop/JAVA_ITACADEMY/SPRINT_5_VirtualPet/Front/src/components/Pet/PetDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getPetDetails } from '../../services/api'; \r\n\r\nconst PetDashboard = () => {\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const userId = params.get('userId');\r\n  const petId = params.get('petId');\r\n  const [pet, setPet] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPetDetails = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Obtener el token para autenticar la petición\r\n        const response = await getPetDetails(userId, petId, token); // Llamada a la API con userId y petId\r\n        console.log(response.data); // Verifica qué contiene la respuesta\r\n        setPet(response.data); // Guardamos los datos de la mascota en el estado\r\n      } catch (err) {\r\n        console.error('Error fetching pet details:', err);\r\n      }\r\n    };\r\n\r\n    fetchPetDetails();\r\n  }, [petId, userId]); // Dependencias para recargar los detalles de la mascota\r\n\r\n  if (!pet) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"pet-detail-container\">\r\n      <h1>{pet.petName}</h1>\r\n      <img \r\n        src={require(`../../assets/pets/${pet.petType}_${pet.petColor}.png`)} \r\n        alt={pet.petName} \r\n      />\r\n      <p>Type: {pet.petType}</p>\r\n      <p>Color: {pet.petColor}</p>\r\n      <p>Happiness: {pet.happiness}</p>\r\n      <p>Hunger: {pet.hunger}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}