{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\nexport const api = axios.create({\n  baseURL: API_URL\n});\nexport const signup = data => api.post('/v1/auth/signup', data);\nexport const signin = data => api.post('/v1/auth/signin', data);\nexport const createPet = (petData, token) => {\n  return axios.post(`${API_URL}/pet/new`, petData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getUserPets = (userId, token) => {\n  return api.get(`/pet/getUserPets?userId=${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const getAll = token => api.get('/pet/getAll', {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport const getPetDetails = (userId, petId, token) => {\n  return api.get('/pet/get', {\n    params: {\n      userId: userId,\n      petId: petId\n    },\n    // Ahora enviamos tanto el userId como el petId\n    headers: {\n      Authorization: `Bearer ${token}` // Pasamos el token de autorización\n    }\n  });\n};\n\n// Función para actualizar la mascota (localización, accesorio, interacciones)\nexport const updatePet = async (petId, updatedData, token) => {\n  try {\n    // Realizamos la solicitud PUT con los datos actualizados\n    const response = await api.put(`/pet/update/${petId}`, updatedData, {\n      headers: {\n        Authorization: `Bearer ${token}` // Pasamos el token de autorización\n      }\n    });\n\n    // Retornamos la respuesta de la API\n    return response.data;\n  } catch (err) {\n    console.error(\"Error updating pet:\", err);\n    throw new Error(\"Failed to update pet.\");\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","signup","data","post","signin","createPet","petData","token","headers","Authorization","getUserPets","userId","get","getAll","getPetDetails","petId","params","updatePet","updatedData","response","put","err","console","error","Error"],"sources":["C:/Users/patri/Desktop/JAVA_ITACADEMY/SPRINT_5_VirtualPet/Front/src/services/api.js"],"sourcesContent":["\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\nexport const api = axios.create({\n  baseURL: API_URL,\n});\n\nexport const signup = (data) => api.post('/v1/auth/signup', data);\nexport const signin = (data) => api.post('/v1/auth/signin', data);\n\nexport const createPet = (petData, token) => {\n  return axios.post(`${API_URL}/pet/new`, petData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n  export const getUserPets = (userId, token) => {\n    return api.get(`/pet/getUserPets?userId=${userId}`, {\n      headers: { Authorization: `Bearer ${token}` }\n    });\n  };\n\n  export const getAll = (token) => \n    api.get('/pet/getAll', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    export const getPetDetails = (userId, petId, token) => {\n      return api.get('/pet/get', {\n        params: { userId: userId, petId: petId },  // Ahora enviamos tanto el userId como el petId\n        headers: {\n          Authorization: `Bearer ${token}`,  // Pasamos el token de autorización\n        },\n      });\n    };\n    \n    // Función para actualizar la mascota (localización, accesorio, interacciones)\n    export const updatePet = async (petId, updatedData, token) => {\n      try {\n        // Realizamos la solicitud PUT con los datos actualizados\n        const response = await api.put(`/pet/update/${petId}`, updatedData, {\n          headers: {\n            Authorization: `Bearer ${token}`,  // Pasamos el token de autorización\n          },\n        });\n    \n        // Retornamos la respuesta de la API\n        return response.data;\n      } catch (err) {\n        console.error(\"Error updating pet:\", err);\n        throw new Error(\"Failed to update pet.\");\n      }\n    };\n    "],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,MAAM,GAAIC,IAAI,IAAKJ,GAAG,CAACK,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;AACjE,OAAO,MAAME,MAAM,GAAIF,IAAI,IAAKJ,GAAG,CAACK,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;AAEjE,OAAO,MAAMG,SAAS,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;EAC3C,OAAOX,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,UAAU,EAAES,OAAO,EAAE;IAC/CE,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAEC,OAAO,MAAMG,WAAW,GAAGA,CAACC,MAAM,EAAEJ,KAAK,KAAK;EAC5C,OAAOT,GAAG,CAACc,GAAG,CAAC,2BAA2BD,MAAM,EAAE,EAAE;IAClDH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,MAAM,GAAIN,KAAK,IAC1BT,GAAG,CAACc,GAAG,CAAC,aAAa,EAAE;EACrBJ,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUF,KAAK;EAChC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,aAAa,GAAGA,CAACH,MAAM,EAAEI,KAAK,EAAER,KAAK,KAAK;EACrD,OAAOT,GAAG,CAACc,GAAG,CAAC,UAAU,EAAE;IACzBI,MAAM,EAAE;MAAEL,MAAM,EAAEA,MAAM;MAAEI,KAAK,EAAEA;IAAM,CAAC;IAAG;IAC3CP,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUF,KAAK,EAAE,CAAG;IACrC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,SAAS,GAAG,MAAAA,CAAOF,KAAK,EAAEG,WAAW,EAAEX,KAAK,KAAK;EAC5D,IAAI;IACF;IACA,MAAMY,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAAC,eAAeL,KAAK,EAAE,EAAEG,WAAW,EAAE;MAClEV,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUF,KAAK,EAAE,CAAG;MACrC;IACF,CAAC,CAAC;;IAEF;IACA,OAAOY,QAAQ,CAACjB,IAAI;EACtB,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IACzC,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}